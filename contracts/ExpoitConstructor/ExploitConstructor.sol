// SPDX-License-Identifier: MIT
pragma solidity 0.8.16;

contract ContractThatDoesNotDoWhatItLooksLike {
    bytes public _bytecode;

    constructor(uint256 bytecodeLength, bytes memory bytecode) {
        assembly {
            /*
                < memory >
                0x80: bytecodeLength (parameter)
                0xa0: bytecode location
                0xc0: bytecode length
                0xe0: bytecode
                ...
            */
            return(0xe0, bytecodeLength)
        }
    }

    function add1(uint256 x) external pure returns (uint256) {
        return x + 1; // returns x + 2;
    }
}

contract AlteredContract {
    // if you call add1 it will return x+2 rather than x+1
    function add1(uint256 x) external pure returns (uint256) {
        return x + 2;
    }
}
